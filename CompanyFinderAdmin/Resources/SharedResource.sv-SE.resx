<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Administrator" xml:space="preserve">
    <value>Administratör</value>
  </data>
  <data name="Are you sure you want to delete this company?" xml:space="preserve">
    <value>Are you sure you want to delete this company?</value>
  </data>
  <data name="Back to dashboard" xml:space="preserve">
    <value>Back to dashboard</value>
  </data>
  <data name="Back to industry filter" xml:space="preserve">
    <value>Back to industry filter</value>
  </data>
  <data name="Change the tagline of the home page" xml:space="preserve">
    <value>Change the tagline of the home page</value>
  </data>
  <data name="Check on the status of and send company templates" xml:space="preserve">
    <value>Check on the status of and send company templates</value>
  </data>
  <data name="Company edit successfully saved to database!" xml:space="preserve">
    <value>Company edit successfully saved to database!</value>
  </data>
  <data name="Company ID" xml:space="preserve">
    <value>Company ID</value>
  </data>
  <data name="Company Name" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="Company successfully saved to database!" xml:space="preserve">
    <value>Company successfully saved to database!</value>
  </data>
  <data name="Company Website" xml:space="preserve">
    <value>Company Website</value>
  </data>
  <data name="Competence" xml:space="preserve">
    <value>Kompetens</value>
  </data>
  <data name="Construction" xml:space="preserve">
    <value>Konstruktion</value>
  </data>
  <data name="Contact Person" xml:space="preserve">
    <value>Contact Person</value>
  </data>
  <data name="Contact Phone Number" xml:space="preserve">
    <value>Contact Phone Number</value>
  </data>
  <data name="Create a new company" xml:space="preserve">
    <value>Create a new company</value>
  </data>
  <data name="Create all skills and details as a tree view for an easy overview of the database structure" xml:space="preserve">
    <value>Create all skills and details as a tree view for an easy overview of the database structure</value>
  </data>
  <data name="Create TreeNodes" xml:space="preserve">
    <value>Create TreeNodes</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Edit Template" xml:space="preserve">
    <value>Edit Template</value>
  </data>
  <data name="Edit the home page" xml:space="preserve">
    <value>Edit the home page</value>
  </data>
  <data name="Edit the home page tagline" xml:space="preserve">
    <value>Edit the home page tagline</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Email Address" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="Email subject" xml:space="preserve">
    <value>Email subject</value>
  </data>
  <data name="Fill in the companies details and save it to the database" xml:space="preserve">
    <value>Fill in the companies details and save it to the database</value>
  </data>
  <data name="Focus" xml:space="preserve">
    <value>Focus</value>
  </data>
  <data name="Go Back" xml:space="preserve">
    <value>Go Back</value>
  </data>
  <data name="Healthcare" xml:space="preserve">
    <value>Sjukvård</value>
  </data>
  <data name="Information Technology" xml:space="preserve">
    <value>Informationsteknologi</value>
  </data>
  <data name="Locked" xml:space="preserve">
    <value>Locked</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Logga in</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logga ut</value>
  </data>
  <data name="Not Recieved" xml:space="preserve">
    <value>Not Recieved</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Lösenord</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Pick a company to edit or delete" xml:space="preserve">
    <value>Pick a company to edit or delete</value>
  </data>
  <data name="Received" xml:space="preserve">
    <value>Received</value>
  </data>
  <data name="Recruitment Website" xml:space="preserve">
    <value>Recruitment Website</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Right click on a node to create, rename or delete. You can also drag and drop the nodes into place." xml:space="preserve">
    <value>Right click on a node to create, rename or delete. You can also drag and drop the nodes into place.</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Save tree and push to database" xml:space="preserve">
    <value>Save tree and push to database</value>
  </data>
  <data name="Search a company" xml:space="preserve">
    <value>Search a company</value>
  </data>
  <data name="Search Company" xml:space="preserve">
    <value>Search Company</value>
  </data>
  <data name="Select Industry" xml:space="preserve">
    <value>Välj Industrin</value>
  </data>
  <data name="Send a template to a company" xml:space="preserve">
    <value>Send a template to a company</value>
  </data>
  <data name="Sent" xml:space="preserve">
    <value>Sent</value>
  </data>
  <data name="Short Biography" xml:space="preserve">
    <value>Short Biography</value>
  </data>
  <data name="Thank you for submitting your companies information." xml:space="preserve">
    <value>Thank you for submitting your companies information.</value>
  </data>
  <data name="To - Company name" xml:space="preserve">
    <value>To - Company name</value>
    <comment>The company name you are sending an email to</comment>
  </data>
  <data name="To - Email address" xml:space="preserve">
    <value>To - Email address</value>
    <comment>The email address you are sending an email to</comment>
  </data>
  <data name="Tree successfully saved to database!" xml:space="preserve">
    <value>Tree successfully saved to database!</value>
  </data>
  <data name="Unlock" xml:space="preserve">
    <value>Unlock</value>
  </data>
  <data name="Unlock Template" xml:space="preserve">
    <value>Unlock Template</value>
  </data>
  <data name="Use no more than 1000 characters" xml:space="preserve">
    <value>Use no more than 1000 characters</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Användarnamn</value>
  </data>
  <data name="View all companies in the database" xml:space="preserve">
    <value>View all companies in the database</value>
  </data>
  <data name="View all the companies saved to the database and choose to edit or delete them" xml:space="preserve">
    <value>View all the companies saved to the database and choose to edit or delete them</value>
  </data>
  <data name="View template status" xml:space="preserve">
    <value>View template status</value>
  </data>
  <data name="We'll be in contact shortly." xml:space="preserve">
    <value>We'll be in contact shortly.</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
</root>